name: sessions

services:
    apis:
        build:
            context: .
        hostname: apis
        ports:
            - 3000:3000
        volumes:
            - ./src/:/app/src/
            - .env/:/app/.env
        restart: on-failure
        networks:
            - app-network
        depends_on:
            - redis
            - mongodb1

    redis:
        image: redis:latest
        hostname: redis
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        networks:
            - app-network
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 10s
            timeout: 30s
            retries: 5

    redis-bullboard:
        image: deadly0/bull-board:3.2.6
        hostname: redis-bullboard
        ports:
            - 3010:3000
        networks:
            - app-network
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - BULL_PREFIX=bull
            - USER_LOGIN=admin
            - USER_PASSWORD=admin123
        depends_on:
            - redis

    mongodb1:
        image: mongo:latest
        hostname: mongodb1
        ports:
            - '27017:27017'
        links:
            - mongodb2
            - mongodb3
        depends_on:
            mongodb2:
                condition: service_started
            mongodb3:
                condition: service_started
        networks:
            - app-network
        volumes:
            - mongodb1_data:/data/db
            - mongodb1_config:/data/configdb
        command: mongod --bind_ip_all --replSet rs0 --port 27017
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        healthcheck:
            test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 10

    mongodb2:
        image: mongo:latest
        hostname: mongodb2
        networks:
            - app-network
        ports:
            - '27018:27018'
        volumes:
            - mongodb2_data:/data/db
            - mongodb2_config:/data/configdb
        command: mongod --bind_ip_all --replSet rs0 --port 27018
        extra_hosts:
            - 'host.docker.internal:host-gateway'

    mongodb3:
        image: mongo:latest
        hostname: mongodb3
        networks:
            - app-network
        ports:
            - '27019:27019'
        volumes:
            - mongodb3_data:/data/db
            - mongodb3_config:/data/configdb
        command: mongod --bind_ip_all --replSet rs0 --port 27019
        extra_hosts:
            - 'host.docker.internal:host-gateway'

volumes:
    mongodb1_data:
    mongodb2_data:
    mongodb3_data:
    mongodb1_config:
    mongodb2_config:
    mongodb3_config:
    redis_data:

networks:
    app-network:
        driver: bridge
